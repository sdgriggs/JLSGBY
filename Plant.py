import random
import GameInfo

class Crop:
    def __init__(self):
        self.name = "Parent crop."
        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = 10       # Dummy value.
        self.safeUvLevels = {"Very_High": False, "High": False, "Moderate": False, "Low":False}          # Dummy value.
        self.sellValue = 0              # Dummy value.
        self.buyValue = 0      # Dummy value.
        self.foodPerHourPerPlant = 0        # Dummy value
        self.spriteFile = ""
        self.spriteCoords = []
        self.thresh = 0
        self.to_show = 0

    # Increases the number of plants of this crop by one. It is the implementing function's responsibility to check that there are sufficient funds.
    def addPlant(self, x1, y1, x2, y2, dead_x1, dead_y1, dead_x2, dead_y2, amount=1):
        #Allows you to add multiple
        if amount < 1:
            raise ValueError

        self.quantity += amount
        # Possibly increase price per plant on purchase?

        coords = [random.randint(x1, x2), random.randint(y1, y2)]

        while dead_x1 <= coords[0] <= dead_x2 and dead_y1 <= coords[1] <= dead_y2:
            coords = [random.randint(x1, x2), random.randint(y1, y2)]

        self.to_show += 1
        self.spriteCoords.append(coords)

    # Decreases the number of plants, if possible. Returns true on a success and false on a failure.
    def sellPlant(self, amount=1):
        if self.quantity >= amount:
            self.quantity -= amount
            for i in range(amount):
                self.spriteCoords.pop()
            return True
        else:
            return False
    
    # Returns the total food value generated by this plant per tick.
    def getFoodPerTick(self, temp, uvLevel):
        valuePercent = 1.0

        if temp < self.minGoodTemp:
            valuePercent -= .5
        
        if not self.safeUvLevels[uvLevel]:
            valuePercent -= .5


        return self.quantity * self.foodPerHourPerPlant * valuePercent / GameInfo.TICKS_PER_HOUR

    
    # Returns a brief string description for the crop.
    def getUvTolerance(self):
        uvTolerance = ""
        if self.safeUvLevels["High"]:
            uvTolerance += "High"
        elif self.safeUvLevels["Moderate"]:
            uvTolerance += "Moderate"
        elif self.safeUvLevels["Low"]:
            uvTolerance += "Low"

        return f"UV Tolerance: {uvTolerance}"
    
class Generic(Crop):

    def __init__(self):
        self.name = "Super Tomato"
        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = -50      
        self.safeUvLevels = {"Very_High": False, "High": False, "Moderate": True, "Low":True}     
        self.sellValue = 10              
        self.buyValue = 20     
        self.foodPerHourPerPlant = 5
        self.spriteFile = "assets\\green_plant.png"
        self.spriteCoords = []   
        self.thresh = 0   
        self.to_show = 0  


class UVResistant(Crop):

    def __init__(self):
        self.name = "Resistant Radishes"
        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = -50      
        self.safeUvLevels = {"Very_High": False, "High": True, "Moderate": True, "Low":True}       
        self.sellValue = 15             
        self.buyValue = 25     
        self.foodPerHourPerPlant = 3.5        
        self.spriteFile = "assets\\red_plant.png"
        self.spriteCoords = []   
        self.thresh = 1000 
        self.to_show = 0  

class ColdResistant(Crop):

    def __init__(self):
        self.name = "Freeze Free Lettuce"
        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = -90      
        self.safeUvLevels = {"Very_High": False, "High": False, "Moderate": True, "Low":True}     
        self.sellValue = 15              
        self.buyValue = 25     
        self.foodPerHourPerPlant = 2
        self.spriteFile = "assets\\blue_plant.png"
        self.spriteCoords = []      
        self.thresh = 500  
        self.to_show = 0       

class Hybrid(Crop):

    def __init__(self):
        self.name = "Uber Tubers"
        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = -30      
        self.safeUvLevels = {"Very_High": False, "High": False, "Moderate": True, "Low":True}      
        self.sellValue = 15              
        self.buyValue = 30     
        self.foodPerHourPerPlant = 7.5 
        self.spriteFile = "assets\\potato.png"
        self.spriteCoords = []   
        self.thresh = 5000 
        self.to_show = 0      

class CashCow(Crop):

    def __init__(self):

        self.name = "Super Sweet Strawberries"

        self.quantity = 0           # All start at 0 quantity.
        self.minGoodTemp = -10      
        self.safeUvLevels = {"Very_High": False, "High": False, "Moderate": False, "Low":True}     
        self.sellValue = 15              
        self.buyValue = 30     
        self.foodPerHourPerPlant = 25    
        self.spriteFile = "assets\\cash_cow.png"
        self.spriteCoords = [] 
        self.thresh = 10000 
        self.to_show = 0   
